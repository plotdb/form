div
  div(plug="widget")
    .form-group.d-inline-block.mb-0.has-tips.manual
      .btn.btn-upload.btn-outline-secondary.has-tips.manual(ld="button")
        span(ld="name") Upload ...
        input.form-control.form-control-sm(ld="input",type="file")
        .hover-tip.tip-sm: a(ld="info")
      .invalid-feedback.hover-tip.tip-sm please enter a better value
  script(type="@plotdb/block"): :lsc
    module.exports =
      pkg:
        extend: name: 'base'
        dependencies: [
          { name: "ldview", version: "main"}
        ]
      init: ({root, ctx, data, parent, pubsub, t})  ->
        pubsub.fire \init, mod: mod({root, ctx, data, parent, t})
    store = -> Promise.resolve {name: "dummy", url: "about:blank", size: 1234}
    mod = ({root, ctx, data, parent, t}) ->
      {ldview} = ctx
      meta = data or {}
      init: ->
        @on \change, ~>
        handler = ({node}) ~>
          store node.files
            .then ({name, url, size}) ~> @value {name, url, size}
            .then -> node.value = null
          console.log node.files.0
          #@value node.value
        @view = view = new ldview do
          root: root
          action:
            input: input: handler
            change: input: handler
          handler:
            info: ({node}) ~>
              if !(v = @value!) =>
                node.innerText = 'no file'
                node.setAttribute \href, ''
              else
                node.innerText = if !v => '' else "#{v.name} / #{(v.size/1048576).toFixed(2)}MB"
                node.setAttribute \href, v.url
            button: ({node}) ~>
              v = @value!
              node.classList.toggle \tip-on, !!v
            name: ({node}) ~>
              node.innerText = if @value! => 'Re-Upload ...' else 'Upload ...'

            input: ({node}) ~>
              readonly = !!meta.{}config.readonly
              if readonly => node.setAttribute \readonly, true
              else node.removeAttribute \readonly
              node.classList.toggle \is-invalid, !!@_errors.length

      render: -> @view.render!
