 (function() { function pug_attr(t,e,n,r){if(!1===e||null==e||!e&&("class"===t||"style"===t))return"";if(!0===e)return" "+(r?t:t+'="'+t+'"');var f=typeof e;return"object"!==f&&"function"!==f||"function"!=typeof e.toJSON||(e=e.toJSON()),"string"==typeof e||(e=JSON.stringify(e),n||-1===e.indexOf('"'))?(n&&(e=pug_escape(e))," "+t+'="'+e+'"'):" "+t+"='"+e.replace(/'/g,"&#39;")+"'"}
function pug_escape(e){var a=""+e,t=pug_match_html.exec(a);if(!t)return e;var r,c,n,s="";for(r=t.index,c=0;r<a.length;r++){switch(a.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}c!==r&&(s+=a.substring(c,r)),c=r+1,s+=n}return c!==r?s+a.substring(c,r):s}
var pug_match_html=/["&<>]/;
function pug_rethrow(e,n,r,t){if(!(e instanceof Error))throw e;if(!("undefined"==typeof window&&n||t))throw e.message+=" on line "+r,e;var o,a,i,s;try{t=t||require("fs").readFileSync(n,{encoding:"utf8"}),o=3,a=t.split("\n"),i=Math.max(r-o,0),s=Math.min(a.length,r+o)}catch(t){return e.message+=" - could not read from "+n+" ("+t.message+")",void pug_rethrow(e,null,r)}o=a.slice(i,s).map(function(e,n){var t=n+i+1;return(t==r?"  > ":"    ")+t+"| "+e}).join("\n"),e.path=n;try{e.message=(n||"Pug")+":"+r+"\n"+o+"\n\n"+e.message}catch(e){}throw e}function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;var pug_debug_filename, pug_debug_line;try {;pug_debug_line = 1;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cdiv\u003E";
;pug_debug_line = 2;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cdiv" + (" class=\"form-multi-choice\""+pug_attr("ld-scope", true, true, false)+" plug=\"view\"") + "\u003E";
;pug_debug_line = 3;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cdiv class=\"form-check\" ld-each=\"item\"\u003E";
;pug_debug_line = 4;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Clabel class=\"form-check-label clickable\"\u003E";
;pug_debug_line = 5;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cinput class=\"form-check-input\" type=\"checkbox\" ld=\"input\"\u002F\u003E";
;pug_debug_line = 6;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cspan ld=\"name\"\u003E\u003C\u002Fspan\u003E\u003C\u002Flabel\u003E\u003C\u002Fdiv\u003E";
;pug_debug_line = 7;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cdiv class=\"form-check\"\u003E";
;pug_debug_line = 8;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Clabel class=\"form-check-label clickable\"\u003E";
;pug_debug_line = 9;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cinput class=\"form-check-input\" type=\"checkbox\"\u002F\u003E";
;pug_debug_line = 10;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cspan\u003E";
;pug_debug_line = 10;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "other\u003C\u002Fspan\u003E\u003C\u002Flabel\u003E";
;pug_debug_line = 11;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cinput class=\"form-control form-control-sm\"\u002F\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
;pug_debug_line = 12;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cscript type=\"@plotdb\u002Fblock\"\u003E";
;pug_debug_line = 12;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fmulti-choice\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "({\n  pkg: {\n    name: \"multi-choice\",\n    version: \"0.0.1\",\n    extend: {\n      name: \"base\",\n      version: \"0.0.1\"\n    },\n    license: \"MIT\",\n    description: \"\",\n    dependencies: [],\n    i18n: {}\n  },\n  init: function(arg$){\n    var root, parent, context, pubsub, ldview;\n    root = arg$.root, parent = arg$.parent, context = arg$.context, pubsub = arg$.pubsub;\n    ldview = context.ldview;\n    return pubsub.fire('init', {\n      opsets: [],\n      mod: {\n        isEmpty: function(it){\n          return !(it || []).length;\n        }\n      }\n    }).then(function(opt){\n      var ref$, widget, node, items, view;\n      opt == null && (opt = []);\n      ref$ = opt[0], widget = ref$.widget, node = ref$.node;\n      items = [\n        {\n          name: 'option 1'\n        }, {\n          name: 'option 2'\n        }, {\n          name: 'option 3'\n        }, {\n          name: 'option 4'\n        }\n      ];\n      view = new ldview({\n        root: node.view,\n        handler: {\n          item: {\n            list: function(){\n              return items;\n            },\n            view: {\n              action: {\n                input: {\n                  input: function(arg$){\n                    var node, v;\n                    node = arg$.node;\n                    v = widget.value() || [];\n                    if (in$(node.value, v)) {\n                      return;\n                    }\n                    v.push(node.value);\n                    return widget.value(v, true);\n                  }\n                }\n              },\n              text: {\n                name: function(arg$){\n                  var ctx;\n                  ctx = arg$.ctx;\n                  return ctx.name;\n                }\n              },\n              handler: {\n                input: function(arg$){\n                  var node, ctx;\n                  node = arg$.node, ctx = arg$.ctx;\n                  node.setAttribute('name', widget.key());\n                  node.setAttribute('value', ctx.name);\n                  return node.checked = in$(ctx.name, widget.value() || []);\n                }\n              }\n            }\n          }\n        }\n      });\n      widget.on('change', function(){\n        return view.render();\n      });\n      return widget.on('render', function(){\n        return view.render();\n      });\n    });\n  }\n});\nfunction in$(x, xs){\n  var i = -1, l = xs.length \u003E\u003E\u003E 0;\n  while (++i \u003C l) if (x === xs[i]) return true;\n  return false;\n}\u003C\u002Fscript\u003E\u003C\u002Fdiv\u003E";} catch (err) {pug_rethrow(err, pug_debug_filename, pug_debug_line);};return pug_html;}; module.exports = template; })() 