 (function() { function pug_rethrow(e,n,r,t){if(!(e instanceof Error))throw e;if(!("undefined"==typeof window&&n||t))throw e.message+=" on line "+r,e;var o,a,i,s;try{t=t||require("fs").readFileSync(n,{encoding:"utf8"}),o=3,a=t.split("\n"),i=Math.max(r-o,0),s=Math.min(a.length,r+o)}catch(t){return e.message+=" - could not read from "+n+" ("+t.message+")",void pug_rethrow(e,null,r)}o=a.slice(i,s).map(function(e,n){var t=n+i+1;return(t==r?"  > ":"    ")+t+"| "+e}).join("\n"),e.path=n;try{e.message=(n||"Pug")+":"+r+"\n"+o+"\n\n"+e.message}catch(e){}throw e}function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;var pug_debug_filename, pug_debug_line;try {;pug_debug_line = 1;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cdiv\u003E";
;pug_debug_line = 2;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cdiv class=\"d-flex\"\u003E";
;pug_debug_line = 3;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cplug name=\"ctrl\"\u003E\u003C\u002Fplug\u003E\u003C\u002Fdiv\u003E";
;pug_debug_line = 4;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cplug name=\"config\"\u003E\u003C\u002Fplug\u003E";
;pug_debug_line = 5;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cstyle type=\"text\u002Fcss\"\u003E";
;pug_debug_line = 5;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "[ld=hint] {\n  margin-left: 0.5em;\n  width: 1.2em;\n  height: 1.2em;\n  border-radius: 50%;\n  background: rgba(0,0,0,0.1);\n  font-size: 10px;\n  line-height: 1.1em;\n  text-align: center;\n  cursor: pointer;\n}\n\u003C\u002Fstyle\u003E";
;pug_debug_line = 16;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "\u003Cscript type=\"@plotdb\u002Fblock\"\u003E";
;pug_debug_line = 16;pug_debug_filename = "src\u002Fpug\u002Fblock\u002Fconfig\u002Fbase\u002F0.0.1\u002Findex.pug";
pug_html = pug_html + "(function(it){\n  return it();\n})(function(){\n  var blockFactory;\n  blockFactory = {\n    pkg: {\n      name: 'config\u002Fbase',\n      version: '0.0.1',\n      dependencies: [\n        {\n          url: \"\u002Fassets\u002Flib\u002Fldview\u002Fmain\u002Findex.min.js\"\n        }, {\n          url: \"\u002Fassets\u002Flib\u002F@loadingio\u002Fdebounce.js\u002Fmain\u002Fdebounce.min.js\"\n        }\n      ]\n    },\n    init: function(arg$){\n      var root, context, data, pubsub, t, view, this$ = this;\n      root = arg$.root, context = arg$.context, data = arg$.data, pubsub = arg$.pubsub, t = arg$.t;\n      this.data = {};\n      pubsub.on('init', function(opt){\n        var itf;\n        opt == null && (opt = {});\n        this$.data = opt.data || {};\n        this$.itf = itf = {\n          evtHandler: {},\n          get: opt.get || function(){},\n          set: opt.set || function(){},\n          on: function(n, cb){\n            var ref$;\n            return ((ref$ = this.evtHandler)[n] || (ref$[n] = [])).push(cb);\n          },\n          fire: function(n){\n            var v, res$, i$, to$, ref$, len$, cb, results$ = [];\n            res$ = [];\n            for (i$ = 1, to$ = arguments.length; i$ \u003C to$; ++i$) {\n              res$.push(arguments[i$]);\n            }\n            v = res$;\n            for (i$ = 0, len$ = (ref$ = this.evtHandler[n] || []).length; i$ \u003C len$; ++i$) {\n              cb = ref$[i$];\n              results$.push(cb.apply(this, v));\n            }\n            return results$;\n          }\n        };\n        return view.render('hint');\n      });\n      pubsub.on('event', function(n){\n        var v, res$, i$, to$;\n        res$ = [];\n        for (i$ = 1, to$ = arguments.length; i$ \u003C to$; ++i$) {\n          res$.push(arguments[i$]);\n        }\n        v = res$;\n        return this$.itf.fire.apply(this$.itf, [n].concat(v));\n      });\n      return view = new ldview({\n        root: root,\n        text: {\n          name: function(){\n            return t(data.name);\n          }\n        },\n        handler: {\n          hint: function(arg$){\n            var node;\n            node = arg$.node;\n            return node.classList.toggle('d-none', !this$.data.hint);\n          }\n        },\n        action: {\n          click: {\n            hint: function(){\n              return alert(t(this$.data.hint || 'no hint'));\n            }\n          }\n        }\n      });\n    },\n    'interface': function(){\n      return this.itf;\n    }\n  };\n  return blockFactory;\n});\u003C\u002Fscript\u003E\u003C\u002Fdiv\u003E";} catch (err) {pug_rethrow(err, pug_debug_filename, pug_debug_line);};return pug_html;}; module.exports = template; })() 