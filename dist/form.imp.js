// Generated by LiveScript 1.6.0
(function(){
  var longAnswer;
  longAnswer = function(){
    return this;
  };
  longAnswer.prototype = import$(import$(Object.create(Object.prototype), form.block.prototype), {
    attributes: function(){},
    serialize: function(){},
    deserialize: function(){},
    toString: function(){},
    parse: function(){}
  });
  form.type.register({
    name: 'string',
    id: 'string',
    opset: 'string',
    cast: function(v){
      if (v != null) {
        return v + "";
      } else {
        return "";
      }
    }
  });
  form.opset.register({
    name: 'string',
    id: 'string',
    defaultOp: 'include',
    ops: {
      include: {
        config: {
          i: 'some text'
        },
        func: function(arg$){
          var v, c;
          v = arg$.v, c = arg$.c;
          return !!~v.indexOf(c.config.i);
        }
      },
      exclude: {
        config: {
          i: 'some text'
        },
        func: function(arg$){
          var v, c;
          v = arg$.v, c = arg$.c;
          return !~v.indexOf(c.config.i);
        }
      },
      email: function(arg$){
        var v, c;
        v = arg$.v, c = arg$.c;
        return curegex.get('email').exec(v);
      },
      url: function(arg$){
        var v, c;
        v = arg$.v, c = arg$.c;
        return curegex.get('url').exec(v);
      }
    }
  });
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
